#!/bin/bash
set -euxo pipefail

# ⚠️ 手動で書き換える必要があります
RDS_ENDPOINT="YOUR_RDS_ENDPOINT_HERE"

# Update base packages and install prerequisites
dnf -y update
dnf -y install git nodejs npm mariadb105

# Prepare app directory
mkdir -p /var/www/html
chmod 755 /var/www/html

# Sparse clone only the app directory from the training repo
WORKDIR=/opt/employee-app-src
rm -rf "$WORKDIR"
mkdir -p "$WORKDIR"
cd "$WORKDIR"

git init
git remote add origin https://github.com/haw/aws-education-hands-on.git
git config core.sparseCheckout true
# Use cone mode if available (ignore failure if not supported)
git sparse-checkout init --cone || true
echo "day3/db-lab/materials/app/*" > .git/info/sparse-checkout
git fetch --depth=1 origin main
git checkout -b main origin/main

# Deploy app sources
cp -r day3/db-lab/materials/app/* /var/www/html/
cd /var/www/html

# Replace RDS endpoint placeholder in app files
sed -i "s/YOUR_RDS_ENDPOINT_HERE/$RDS_ENDPOINT/g" init_db.js
sed -i "s/YOUR_RDS_ENDPOINT_HERE/$RDS_ENDPOINT/g" server.js

npm install

# Set permissions for application files
chown -R ec2-user:ec2-user /var/www/html

# Create systemd unit
cat > /etc/systemd/system/employee-app.service <<'SERVICE'
[Unit]
Description=Employee Management Node.js App
After=network.target

[Service]
Type=simple
User=ec2-user
WorkingDirectory=/var/www/html
ExecStart=/usr/bin/node server.js
Restart=always
RestartSec=10
Environment=NODE_ENV=production

[Install]
WantedBy=multi-user.target
SERVICE

systemctl daemon-reload
systemctl enable employee-app

# Wait for RDS endpoint to respond, then initialize DB
RETRY_COUNT=0
while ! mysqladmin ping -h $RDS_ENDPOINT -u admin -ppassword123 --silent; do
  RETRY_COUNT=$((RETRY_COUNT + 1))
  if [ $RETRY_COUNT -ge 60 ]; then
    echo "RDS connection timeout"
    break
  fi
  echo "Waiting for RDS... ($RETRY_COUNT/60)"
  sleep 30
done

# Try DB init (may fail if YOUR_RDS_ENDPOINT_HERE not replaced)
node init_db.js || true

# Start app
systemctl start employee-app
