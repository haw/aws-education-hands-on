AWSTemplateFormatVersion: '2010-09-09'
Description: 'Final Exam Question 5 - Troubleshooting Template (Intentionally Broken)'

Resources:
  # VPC
  TroubleshootVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: troubleshoot-vpc

  # Internet Gateway
  TroubleshootIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: troubleshoot-igw

  # Attach IGW to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TroubleshootVPC
      InternetGatewayId: !Ref TroubleshootIGW

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TroubleshootVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: troubleshoot-public-subnet

  # Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TroubleshootVPC
      Tags:
        - Key: Name
          Value: troubleshoot-public-rt

  # Public Route
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref TroubleshootIGW

  # Associate Subnet with Route Table
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Security Group (INTENTIONALLY BROKEN - Port 80 not open)
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for web server
      VpcId: !Ref TroubleshootVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: troubleshoot-web-sg

  # EC2 Instance
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-00ca32bbc84273381 # Amazon Linux 2023 (us-east-1)
      InstanceType: t3.micro
      KeyName: vockey  # AWS Academy default key
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Amazon Linux 2023用 Apache Webサーバ自動セットアップ

          # システム更新
          dnf update -y

          # Apache HTTP Serverインストール
          dnf install -y httpd

          # Apache起動・自動起動設定
          systemctl start httpd
          systemctl enable httpd

          # カスタムWebページ作成
          cat > /var/www/html/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ja">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>🔥 Webサーバ 🔥</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      text-align: center;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      margin: 0;
                      padding: 50px;
                  }
                  .container {
                      background: rgba(255, 255, 255, 0.1);
                      border-radius: 15px;
                      padding: 40px;
                      max-width: 600px;
                      margin: 0 auto;
                      backdrop-filter: blur(10px);
                  }
                  h1 {
                      font-size: 2.5em;
                      margin-bottom: 20px;
                      text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                  }
                  .info {
                      background: rgba(255, 255, 255, 0.2);
                      border-radius: 10px;
                      padding: 20px;
                      margin: 20px 0;
                  }
                  .success {
                      color: #4CAF50;
                      font-weight: bold;
                      font-size: 1.2em;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🚀 Webサーバ起動成功！ 🚀</h1>
                  
                  <div class="info">
                      <h2>🎯 システム情報</h2>
                      <p><strong>OS:</strong> Amazon Linux 2023</p>
                      <p><strong>Webサーバ:</strong> Apache HTTP Server</p>
                      <p><strong>作成日時:</strong> <span id="datetime"></span></p>
                  </div>
                  
                  <div class="info">
                      <h2>✅ 達成したこと</h2>
                      <ul style="text-align: left; display: inline-block;">
                          <li>EC2インスタンスの起動</li>
                          <li>セキュリティグループの設定</li>
                          <li>Apacheの自動インストール</li>
                          <li>カスタムWebページの表示</li>
                      </ul>
                  </div>
                  
                  <div class="success">
                      🎉 おめでとうございます！<br>
                      あなたのWebサーバが世界中からアクセス可能になりました！
                  </div>
                  
                  <div class="info">
                      <h2>🔥 次のステップ</h2>
                      <p>Day3では、Webサーバにデータベースを接続して<br>
                      本格的なWebアプリケーションを構築します！</p>
                  </div>
              </div>
              
              <script>
                  // 日本時間で1秒ごとに更新
                  function updateDateTime() {
                      const now = new Date();
                      const japanTime = now.toLocaleString('ja-JP', {
                          timeZone: 'Asia/Tokyo',
                          year: 'numeric',
                          month: '2-digit',
                          day: '2-digit',
                          hour: '2-digit',
                          minute: '2-digit',
                          second: '2-digit'
                      });
                      document.getElementById('datetime').textContent = japanTime;
                  }
                  
                  // 初回表示
                  updateDateTime();
                  
                  // 1秒ごとに更新
                  setInterval(updateDateTime, 1000);
              </script>
          </body>
          </html>
          EOF

          # ログ出力
          echo "$(date): Apache Webサーバのセットアップが完了しました" >> /var/log/user-data.log
      Tags:
        - Key: Name
          Value: troubleshoot-web-server

Outputs:
  WebServerPublicIP:
    Description: Public IP address of the web server
    Value: !GetAtt WebServerInstance.PublicIp
    
  WebServerURL:
    Description: URL to access the web server (THIS WILL NOT WORK - students need to fix security group)
    Value: !Sub 'http://${WebServerInstance.PublicIp}'
    
  TroubleshootingHint:
    Description: Hint for troubleshooting
    Value: 'If you cannot access the website, check the security group settings carefully!'
